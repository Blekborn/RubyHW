# 1 Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными.
number_two = [1,2,3,4,5,6,7,8,9,10]
puts number_two.partition{|k| number_two.index(k) % 2 == 1}

# 2 Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными.
number_one = [1,2,3,4,5,6,7,8,9,10]
puts number_one.partition{|k| number_two.index(k) % 2 == 0}

# 3 Дан целочисленный массив. Вывести номер первого из тех его элементов, которые удовлетворяют двойному
# неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ].



# 4 Дан целочисленный массив. Вывести номер последнего из тех его элементов, которые удовлетворяют двойному
# неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ].


# 5 Дан целочисленный массив. Преобразовать его, прибавив к четным числам первый элемент. Первый и последний
# элементы массива не изменять.

array_one = [2,4,5,3,7,8,9]



# 6
# 7
# 8
# 9
# 10
# 11
# 12
# 13
# 14
# 15
# 16
# 17
# 18
# 19
# 20
# 21
# 22
# 23
# 24
# 25
# 26
# 27
# 28
# 29 Дан целочисленный массив. Упорядочить его по возрастанию.
a = [1, 7, 6, 5, 4, 3, 2, 1]
puts a.sort

# 30 Дан целочисленный массив. Упорядочить его по убыванию.
ab = [1, 7, 6, 5, 4, 3, 2, 1]
puts ab.sort.reverse


# 31 Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им
# элементы образуют убывающую последовательность.
arraym = [3, 2, 1, 7, 5, 6, 4, 8, 9]
p (0...arraym.size).sort_by{ |i| arraym[i] }.reverse
# 32 Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы
# образуют возрастающую последовательность.
arrayms = [3, 2, 1, 7, 5, 6, 4, 8, 9]
p (0...arrayms.size).sort_by{ |is| arrayms[is] }.select.to_a

# 33 Дан целочисленный массив. Найти индекс минимального элемента.
arrayminnel = [4, 2, 9, 3, 5, 1, 1, 6, 4]
puts arrayminnel.each_with_index.min.to_s
############################
# 34 Дан целочисленный массив. Найти индекс максимального элемента.
arraymaxnel = [4, 2, 9, 3, 5, 1, 6, 4]
puts arraymaxnel.each_with_index.max.to_s
################
# 35 Дан целочисленный массив. Найти индекс первого минимального элемента.
arrayminnels = [4, 2, 9, 3, 5, 1, 1, 1, 6, 4]
puts arrayminnels.each_with_index.min.to_s
# 36 Дан целочисленный массив. Найти индекс первого максимального элемента.

# 37 Дан целочисленный массив. Найти индекс последнего минимального элемента.
# 38 Дан целочисленный массив. Найти индекс последнего максимального элемента.
arraymaxxnel = [4, 2, 9, 9, 9, 3, 5, 1, 6, 4]
puts arraymaxxnel.each_with_index.max.to_s
# 39 Дан целочисленный массив. Найти количество минимальных элементов.
# 40 Дан целочисленный массив. Найти количество максимальных элементов.
# 41 Дан целочисленный массив. Найти минимальный четный элемент.
arrayfour = [1, 3, 4, 5, 6, 7, 8, 10]
puts arrayfour.select { |cv| cv % 2 == 0 }.min

# 42 Дан целочисленный массив. Найти минимальный нечетный элемент.
arraymin = [3, 5, 7, 2, 4, 3, 9]
puts arraymin.select { |cs| cs % 2 == 1 }.min

# 43 Дан целочисленный массив. Найти максимальный четный элемент.
arraymax = [3, 5, 7, 2, 4, 3, 9]
puts arraymax.select { |csz| csz % 2 == 0 }.max
# 44 Дан целочисленный массив. Найти максимальный нечетный элемент.
arraymaxx = [3, 5, 7, 2, 4, 3, 9]
puts arraymaxx.select { |csa| csa % 2 == 1 }.max

# 45 Дан целочисленный массив. Найти минимальный положительный элемент.
arrayminel = [-1, 5, -6, 2, -4, 3]
puts arrayminel.select { |es| es >= 0 }.min

# 46 Дан целочисленный массив. Найти максимальный отрицательный элемент.
arraymaxel = [-1, 5, -6, 2, -4, 3]
puts arraymaxel.select { |et| et < 0 }.min

# 47 Дан целочисленный массив и интервал a..b. Найти минимальный из элементов в этом интервале.
arraymas = [24, 5, 6, 7, 83, 4, 54, 6, 3]
ab = (2..6)
puts arraymas[ab].min

# 48 Дан целочисленный массив и интервал a..b. Найти максимальный из элементов в этом интервале.
arraymass = [24, 5, 6, 7, 83, 4, 54, 6, 3]
ba = (2..6)
puts arraymass[ba].max


# 49 Дан целочисленный массив. Найти количество элементов, расположенных перед первым минимальным.
# 50 Дан целочисленный массив. Найти количество элементов, расположенных перед первым максимальным.
# 51 Дан целочисленный массив. Найти количество элементов, расположенных после первого максимального.
# 52 Дан целочисленный массив. Найти количество элементов, расположенных после первого минимального .
# 53 Дан целочисленный массив. Найти количество элементов, расположенных перед последним максимальным.
# 54 Дан целочисленный массив. Найти количество элементов, расположенных перед последним минимальным.
# 55 Дан целочисленный массив. Найти количество элементов, расположенных после последнего максимального.
# 56 Дан целочисленный массив. Найти количество элементов, расположенных после последнего минимального .
# 57 Дан целочисленный массив. Найти индекс первого экстремального (то есть минимального или максимального) элемента.
# 58 Дан целочисленный массив. Найти индекс последнего экстремального (то есть минимального или максимального) элемента.
# 59 Дан целочисленный массив. Найти количество элементов, между первым и последним минимальным.
# 60 Дан целочисленный массив. Найти количество элементов, между первым и последним максимальным.
#
# 77 Дано целое число. Найти сумму его цифр.
numbers = 1234
puts numbers.digits.sum

# 78 Дано целое число. Найти произведение его цифр.
numberrs = 1234
p numberrs.digits.inject(:*)
# 82 Дано число А и натуральное число N. Найти результат следующего выражения 1 + А + А*2 + А*3 + … + А*N.


# 83 Дано число А и натуральное число N. Найти результат следующего выражения 1 - А + А*2 - А*3 + … + ((-1)**N)*А*N.
#
#
#
# 86 Дан целочисленный массив. Найти среднее арифметическое его элементов.
arry = [1, 3, 5, 7, 9, 2, 4, 6]


# 87 Дан целочисленный массив. Найти все четные элементы.
arry = [2, 4, 5, 3, 7, 4, 5, 3]
arry.each do |df|
  if df % 2 == 0
    puts df
  end
end

# 88 Дан целочисленный массив. Найти количество четных элементов.
#
#
# 89 Дан целочисленный массив. Найти все нечетные элементы.
arrys = [2, 4, 5, 3, 7, 4, 5, 3]
arrys.each do |dfs|
  if dfs % 2 == 1
    puts dfs
  end
end

# 90 Дан целочисленный массив. Найти количество нечетных элементов.
#